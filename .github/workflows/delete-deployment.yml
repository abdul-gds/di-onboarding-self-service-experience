name: Delete deployment

on:
  workflow_dispatch:
  schedule:
    # Every weekday at 10am
    - cron: '0 10 * * 1-5'
  pull_request:
    types: [ closed ]

permissions: read-all

jobs:
  delete-paas-deployment:
    name: Delete app preview
    runs-on: ubuntu-latest
    environment: preview
    concurrency: deploy-paas-${{ github.head_ref || github.ref_name }}
    steps:
      - name: PaaS login
        uses: alphagov/di-github-actions/paas/log-in-to-paas@ad7ff02640e256ecc3f677bc876ac0a22ed25964
        with:
          cf-org-name: gds-digital-identity-onboarding
          cf-space-name: self-service-preview
          cf-username: ${{ secrets.CF_USERNAME }}
          cf-password: ${{ secrets.CF_PASSWORD }}

      - name: Get app name
        if: ${{ github.event_name != 'schedule' }}
        uses: alphagov/di-github-actions/beautify-branch-name@ad7ff02640e256ecc3f677bc876ac0a22ed25964
        with:
          downcase: true
          length-limit: 63
          underscores-to-hyphens: true
          prefix: di-sse-prev
          set-env-var: APP_NAME
          usage: App name

      - name: Delete app
        if: ${{ github.event_name != 'schedule' }}
        run: cf delete "$APP_NAME" -rf

      - name: Clean up stale deployments
        if: ${{ github.event_name == 'schedule' }}
        uses: alphagov/di-github-actions/paas/delete-stale-apps@ad7ff02640e256ecc3f677bc876ac0a22ed25964
        with:
          age-threshold-days: 30

  delete-fargate-deployment:
    name: Delete Fargate deployment
    runs-on: ubuntu-latest
    environment: development
    concurrency: deploy-fargate-${{ github.head_ref || github.ref_name }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.GHA_AWS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Delete docker image
        if: ${{ github.event_name != 'schedule' }}
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          imageDigest=$(aws ecr list-images \
            --repository-name self-service/frontend \
            --filter tagStatus=TAGGED \
            --query "imageIds[?imageTag=='$BRANCH_NAME'].imageDigest" \
            --output text)
          
          aws ecr batch-delete-image \
            --repository-name self-service/frontend \
            --image-ids imageDigest="'$imageDigest'" \
            --output text         

      - name: Clean up stale task definitions
        if: ${{ github.event_name == 'schedule' }}
        uses: alphagov/di-github-actions/aws/ecs/deregister-stale-task-definitions@ad7ff02640e256ecc3f677bc876ac0a22ed25964
        with:
          family: self-service-frontend
          container: self-service-frontend
          registry: ${{ steps.login-ecr.outputs.registry }}
